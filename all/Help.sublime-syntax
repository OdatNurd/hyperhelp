%YAML 1.2
---
name: HyperHelp
scope: text.hyperhelp
hidden: true
first_line_match: '^%hyperhelp'
variables:
  key: '<[^>]*>'
  code: '`[^`]*`'
  link: '(\|''?)([^|'' ]*)(''?\|)'
  link_target: '(\*)([^* ]*)(\*)'
  separator: '\+?([=-])\1{2,}\+?|\|'
  expanded_header: '^{{link_target}}\s+(.*)\s{2,}(.*)'
  author_header: '^(%)(hyperhelp)'
  header_keypair: '\b([a-z]+)(=)(")([^"]*)(")'
contexts:
  main:
    # First line only: a raw help file being authored
    - match: '{{author_header}}'
      captures:
        1: punctuation.definition.directive
        2: keyword.other.directive meta.directive
      push: header_keypairs
    # First line only: a loaded help file with an expanded header
    - match: '{{expanded_header}}'
      captures:
        1: string.unquoted
        2: string.unquoted meta.link-target
        3: string.unquoted
        4: storage.type.class meta.title
        5: variable.language meta.date
      set: body
    - match: '$'
      set: body
  # An authored header can contain any number of key="value" pairs
  header_keypairs:
    - match: '{{header_keypair}}'
      captures:
        1: storage.type.class meta.key
        2: keyword.operator
        3: string.quoted.double
        4: string.quoted.double meta.value
        5: string.quoted.double
    - match: '\S'
      scope: invalid.illegal.hyperhelp.header
    - match: '$'
      set: main
  body:
    - match: '{{link_target}}'
      captures:
        1: string.unquoted
        2: string.unquoted meta.link-target
        3: string.unquoted
    - match: '{{key}}'
      scope: variable.language meta.key
    - match: '{{code}}'
      scope: markup.raw meta.code
    - match: '{{link}}'
      captures:
        1: storage
        2: storage meta.link
        3: storage
    - match: '{{separator}}'
      scope: storage meta.separator